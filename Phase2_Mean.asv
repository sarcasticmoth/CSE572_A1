% feature extraction

clear all
clc

workingdir = pwd;
P1_DataPath = fullfile(workingdir, 'P1_Data');
endpath = fullfile(workingdir, 'P2_Data', 'Mean');

if ~exist(endpath, 'dir')
    mkdir(endpath);
end

% list of files in the P1 Data Path
% remove folders . and ..
cd(P1_DataPath);
tmp = dir('*.csv');
cd('..');

% create a string array of the file names
list = [];
for i=1:size(tmp, 1)
    list = [list; cellstr(tmp(i).name)];
end

% assume the number of users is half the number of
% files in the P1_Data folder

tmp2 = dir(fullfile(workingdir, 'Data', 'MyoData'));
tmp2 = tmp2(~ismember({tmp2.name},{'.','..'}));
users = [];
for i=1:size(tmp2, 1)
    users = [users; cellstr(tmp2(i).name)];
end

% loop through users
% get eat data and non-eat data per user
% use xlsread(file, A:A) to pull columns

% take mean
% normalize
% save result

ea_matrix=[];

for i=1:size(users, 1)
    userfiles = list(contains(list, users(i,:)));
    
    % eating action data
    eat = userfiles(contains(userfiles, '_Eat'));
    usereatfile = fullfile(P1_DataPath, eat);
    
    % load into matrix
    ea_matrix = readmatrix(usereatfile{1,1});
    
    % mean calculations
    % means of each sensor/column are stored
    ea_imu_mean = mean(ea_matrix);
    
    % normalized data
    % z-score: how many standard deviations a value is from the mean.
    ea_imu_norm_data = normalize(ea_imu_mean);
    
    % non-eating action data
    noneat = userfiles(contains(userfiles, '_NotEat'));
    usernoneatfile = fullfile(P1_DataPath, noneat);
    
    % load into matrix
    nea_matrix = readmatrix(usernoneatfile{1,1});
    
    % mean calculations
    % means of each sensor/column are stored
    nea_imu_mean = mean(nea_matrix);
    
    % normalized data
    % z-score: how many standard deviations a value is from the mean.
    nea_imu_norm_data = normalize(nea_imu_mean);
    
    % save output to file
    eafileoutput = fullfile(endpath, user + "_" + 'IMU_Eat.
    
end

